# Default values for wagtail.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Define serviceAccount names for components. Defaults to component's fully qualified name.
##
serviceAccounts:
  wagtail:
    create: true
    name: wagtail
    annotations: {}
  memcached:
    create: true
    name: memcached
    annotations: {}

# -------------------------------------------------------------
# WAGTAIL
# -------------------------------------------------------------

wagtail:
  name: wagtail
  image:
    repository: "ghcr.io/ietf-tools/wagtail_website"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v2.0.0"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: wagtail.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # livenessProbe:
  #   httpGet:
  #     # /submit/tool-instructions/ just happens to be cheap until we get a real health endpoint
  #     path: /submit/tool-instructions/
  #     port: http

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

#readinessProbe:
#  httpGet:
#    # /submit/tool-instructions/ just happens to be cheap until we get a real health endpoint
#    path: /submit/tool-instructions/
#    port: http

  replicaCount: 1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8000

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # startupProbe:
  #   initialDelaySeconds: 15
  #   periodSeconds: 5
  #   timeoutSeconds: 5
  #   successThreshold: 1
  #   failureThreshold: 60
  #   httpGet:
  #     path: 
  #     port: http

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: settings-local-volume
      configMap:
        name: django-configmap

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: settings-local-volume
      mountPath: /app/ietf/settings/local.py
      subPath: local.py
      readOnly: true

  tolerations: []

  nodeSelector: {}

  affinity: {}

# -------------------------------------------------------------
# MEMCACHED
# -------------------------------------------------------------

memcached:
  name: memcached
  image:
    repository: "memcached"
    pullPolicy: IfNotPresent
    tag: "1.6-alpine"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  replicaCount: 1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 11211

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  tolerations: []

  nodeSelector: {}

  affinity: {}

# -------------------------------------------------------------
# COMMON
# -------------------------------------------------------------

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

env:
  DJANGO_SETTINGS_MODULE: "ietf.settings.dev"
  EMAIL_HOST: "localhost"
  DBHOST: "host.minikube.internal"
  DBNAME: "wagtail"
  DBUSER: "www_iab"
  DBPASS: "www_iab"
  SECRET_KEY: "SpAA3v4icREtlC2ND3oZ8JABMEP2Cf1U"
  ALLOWED_HOSTS: "localhost,127.0.0.1"
  WAGTAILADMIN_BASE_URL: "http://localhost:8080/admin"
